[alias]
	# shortcuts
	h		= help
	s		= status
	d		= diff
	c		= commit
	ca		= commit --amend
	f		= fetch
	m		= merge
	ma		= merge --abort
	p		= push
	b		= branch
	r		= reset
	rh		= reset --hard
	rs		= reset --soft
	rb		= rebase
	rbc		= rebase --continue
	rba		= rebase --abort
	mt		= mergetool
	cp		= cherry-pick
	cpc		= cherry-pick --continue
	cpa		= cherry-pick --abort
	co		= checkout
	cob		= checkout -b
	pu		= pull
	sf		= submodule foreach
	sub		= submodule
	subup		= submodule update --init
	subinit		= submodule init
	subco		= submodule foreach git checkout
	submaster	= submodule foreach git checkout master
	subpull		= !~/.config/git/bin/git-subpull.sh
	w		= whatchanged
	url		= remote -v	# list checkout urls
	logg		= log --graph --pretty=format:'%C(bold 232 154)%h%C(reset) %C(bold 165 235)%cd%C(reset) %C(bold 39 235)%an%C(reset)%C(bold 121 235)%d%C(reset) %s' --date=short
	show-unmerged	= show-branch --topo-order --topics --sha1-name

	# tattle = tell our remote about branch (or delete it with :branch)
	# usefulness: TODO
	tattle		= push --set-upstream origin
	# use this to blow away all untracked files and unstaged changes
	nuke		= !git clean -x -d -f && git co --force

[commit]
	# automatically gpg-sign all commits
	# (aliasing commit=commit -S does not work)
	gpgSign		= yes

[core]
	pager		= less -R	# handle colors correctly
	excludesfile	= ~/.gitignore_global

[pull]
	# avoid merge bubbles: do not ask to merge when a pull isn't a ff
	# note: if rejected, either use pull -r OR rebase origin/$branch and retry
	ff = only

[merge]
	# merges should only be explicit merges, regardless of whether they're ff merges
	ff = false
	tool = vimdiff

# only report on submodule pointer states, not working tree state
[diff]
	ignoreSubmodules = dirty

[status]
	ignoreSubmodules = dirty

[fetch]
	# auto-fetch submodules upon git pull only if the superproject has a
	# commit that updates the submodule pointer
	recurseSubmodules = on-demand
	# automatically prune remotely-deleted branches
	prune = true

[grep]
	lineNumber	= true

[color]
	branch		= auto
	diff		= auto
	interactive	= auto
	ui		= auto
	pager		= true

[include]
	path = ./git-colors-neonwolf-256.gitconfig

[user]
	name = Dan Church
	email = amphetamachine@gmail.com
	signingKey = CD2CDBD0

[github]
	user = h3xx

# enables shortcuts like `git clone gh:h3xx/dotfiles.git`
[url "git@github.com:"]
	insteadOf	= gh:

[push]
	default = simple

[log]
	decorate = true

[advice]
	# I know how to stage files now, git status
	statusHints =
	# I also know all about detatched heads, tyvm
	detachedHead =

# vi: ft=gitconfig
