# vi: ft=gitconfig ts=8 sts=8 sw=8 noet

[alias]
	# shortcuts
	b		= branch
	br		= !read -p \"use git b! [OK]\" && git branch
	c		= commit
	ca		= commit --amend
	co		= checkout
	cob		= checkout -b
	cp		= cherry-pick
	f		= fetch
	h		= help
	logg		= log --graph --pretty=format:'%C(red)%h%C(reset) %C(yellow)%an%d%C(reset) %C(magenta)(%G?)%C(reset) %s %C(green)(%cr)%C(reset)' --date=relative
	m		= merge
	mt		= mergetool
	p		= push
	pu		= pull
	r		= reset
	rb		= rebase
	rh		= reset --hard
	s		= status
	sf		= submodule foreach
	show-unmerged	= show-branch --topo-order --topics --sha1-name
	st		= !read -p \"use git s! [OK]\" && git status
	sub		= submodule
	subbr		= submodule foreach git checkout
	subbranch	= submodule foreach git checkout
	subinit		= submodule init
	submaster	= submodule foreach git checkout master
	subpull		= !~/.config/git/bin/git-subpull.sh
	subup		= submodule update --init
	u		= push -u
	up		= pull # typo
	url		= remote -v # list checkout urls
	w		= whatchanged

	# tattle = tell our remote about branch (or delete it with :branch)
	# usefulness: TODO
	tattle		= push --set-upstream origin
	# use this to blow away all untracked files and unstaged changes
	nuke		= !git clean -x -d -f && git co --force

[color]
	branch = auto
	diff = auto
	interactive = auto
	pager = true
	ui = auto

[color "diff"]
	frag		= bold 165 235
	meta		= bold 39 235
	old		= bold 196 235
	new		= bold 154 235
	commit		= bold 232 154

[color "status"]
	added		= bold 154 235
	changed		= bold 166 235
	untracked	= bold 81 235
	unmerged	= bold 196 235

[commit]
	# automatically gpg-sign all commits
	# (aliasing commit=commit -S does not work)
	gpgSign = yes

[core]
	# Limit memory when resolving deltas?
	deltaBaseCacheLimit = 4g
	excludesfile = ~/.gitignore_global
	# -R: Handle colors correctly
	pager = less -R

[fetch]
	# automatically prune remotely-deleted branches
	prune = true
	# auto-fetch submodules upon git pull only if the superproject has a
	# commit that updates the submodule pointer
	recurseSubmodules = on-demand

[github]
	user = h3xx

[merge]
	# merges should only be explicit merges, regardless of whether they're ff merges
	ff = false
	tool = vimdiff

[pull]
	# avoid merge bubbles: do not ask to merge when a pull isn't a ff
	# note: if rejected, either use pull -r OR rebase origin/$branch and retry
	ff = only

[push]
	default = simple

[url "git@github.com:"]
	# enables shortcuts like `git clone gh:h3xx/dotfiles.git`
	insteadOf = gh:

[user]
	email = amphetamachine@gmail.com
	name = Dan Church
	signingKey = CD2CDBD0
