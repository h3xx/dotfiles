#!/bin/bash
# vi: et sts=4 sw=4 ts=4

# tig(1) wrapper to add some more options:
#
# --up, --upstream      Open the ref in tig for the upstream branch
# -                     Open the last HEAD position (synonymous with @{-1})
#
# Script first conceived 2015-12-08

upstream_ref() {
    BRANCH=$(git branch --show-current)
    if [[ -z $BRANCH ]]; then
        printf 'fatal: could not determine upstream of HEAD when it does not point to any branch.\n' >&2
        exit 128
    fi

    REMOTE=$(git config "branch.$BRANCH.remote")
    REF=$(git config "branch.$BRANCH.merge")
    if [[ -z $REMOTE || -z $REF ]]; then
        printf 'fatal: could not determine upstream of %s when it does not have an upstream set.\n' "$BRANCH" >&2
        exit 128
    fi

    # With...
    # - REF=refs/heads/master
    # - REMOTE=origin
    # ...eliminate 'refs/heads' to make it 'refs/remotes/origin/master'
    printf 'refs/remotes/%s/%s' "$REMOTE" "${REF:11}"
}

ME=${0/*\//}
BIN=$(which -a "$ME" 2>/dev/null |grep -Fvx -m 1 "$0")

# Act as a stand-in for the "git reset" alias, which doesn't support `-` and
# gives a confusing and unhelpful error message: "fatal: option '-' must come
# before non-option arguments"
ARGS=()

for ARG; do
    case "$ARG" in
        -)
            # Open ref at last HEAD position set by 'checkout'
            ARGS+=('@{-1}')
            ;;
        --up|--upstream)
            ARGS+=("$(upstream_ref)")
            ;;
        *)
            ARGS+=("$ARG")
            ;;
    esac
done
exec "$BIN" "${ARGS[@]}"
