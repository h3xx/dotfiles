#!/bin/bash
# vi: et sts=4 sw=4 ts=4

# Script first conceived 2020-06-04

URL=https://getcomposer.org/composer-stable.phar
BINNAME=composer
DEFAULT_OUTDIR=~/bin

TEMP=$(mktemp -t "${0##*/}.XXXXXX")

cleanup() {
    rm -f -- "$TEMP"
}
trap 'cleanup' EXIT

ask_list() {
    local -r PROMPT=$1
    shift 1
    local ANSWER
    if hash pick &>/dev/null; then
        printf '%s\n' "$PROMPT" >&2
        ANSWER=$(IFS=$'\n'; printf '%s\n' "$*" |pick -X)
    else
        local PS3="$PROMPT #"
        select ANSWER; do
            if [[ -n $ANSWER ]]; then
                break
            fi
        done
    fi
    printf '%s\n' "$ANSWER"
    return 0
}

get_output_bin() (
    OUTS=($(
        type -ap "$BINNAME" 2>/dev/null |
        while read -r BIN; do
            if [[ -w $BIN || -w $(dirname "$BINNAME") ]]; then
                if [[ $BIN != $DEFAULT_OUTDIR/$BINNAME ]]; then
                    echo "$BIN"
                fi
            fi
        done
    ))
    if [[ -d $DEFAULT_OUTDIR/ && -w $DEFAULT_OUTDIR/$BINNAME || -w $DEFAULT_OUTDIR ]]; then
        OUTS+=("$DEFAULT_OUTDIR/$BINNAME")
    fi

    if [[ ${#OUTS[@]} -eq 0 ]]; then
        printf 'No potential writable directories (%s)\n' "$PATH:$DEFAULT_OUTDIR" >&2
        exit 2
    fi

    if [[ ${#OUTS[@]} -gt 1 ]]; then
        OUT=$(ask_list 'Please select an output directory' "${OUTS[@]}")
        if [[ -z $OUT ]]; then
            exit 1
        fi
    else
        OUT=${OUTS[0]}
    fi
    printf '%s\n' "$OUT"
)

OUT=$(get_output_bin)
wget -O "$TEMP" "$URL" &&
if [[ -e $OUT ]]; then
    if diff -s -q "$TEMP" "$OUT"; then
        printf 'Installed version already up-to-date.\n' >&2
        exit 0
    fi
    rm -iv -- "$OUT"
fi &&
install -v -p -m 0755 -- "$TEMP" "$OUT"
