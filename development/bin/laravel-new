#!/bin/bash
# vi: et sts=4 sw=4 ts=4

# Script first conceived 2020-02-12

set -e

USAGE() {
    printf 'Usage: %s PROJECT\n' \
        "${0##*/}"
}

HELP_MESSAGE() {
    USAGE
}

check_required_binaries() {
    local \
        BIN \
        MISSING=() \
        REQ=(
            composer
        )

    for BIN in "${REQ[@]}"; do
        if ! type "$BIN" &>/dev/null; then
            MISSING+=("$BIN")
        fi
    done
    if [[ ${#MISSING[@]} -gt 0 ]]; then
        printf 'Error: You are missing required programs:\n' >&2
        for BIN in "${MISSING[@]}"; do
            printf -- '- %s\n' "$BIN"
        done
        exit 2
    fi
}

main() {
    local \
        NO_MORE_FLAGS=0 \
        OPERANDS=()
    for ARG; do
        # Assume arguments that don't begin with a - are supposed to be files or other operands
        if [[ $NO_MORE_FLAGS -eq 0 && $ARG = -* ]]; then
            case "$ARG" in
                --help|-h)
                    HELP_MESSAGE
                    exit 0
                    ;;
                --)
                    NO_MORE_FLAGS=1
                    ;;
                *)
                    printf 'Unrecognized flag: %s\n' \
                        "$ARG" \
                        >&2
                    USAGE >&2
                    exit 2
                    ;;
            esac
        else
            OPERANDS+=("$ARG")
        fi
    done

    check_required_binaries
    if [[ ${#OPERANDS[@]} -eq 0 ]]; then
        USAGE >&2
        exit 1
    fi

    local PROJECT_DIR
    for PROJECT_DIR in "${OPERANDS[@]}"; do
        make_laravel_new "$PROJECT_DIR"
    done
}

make_laravel_new() {
    local PROJECT_DIR=$1
    composer create-project laravel/laravel "$PROJECT_DIR"
    # Fixes inability to find, say App\Models\User when you type User into tinker
    cd "$PROJECT_DIR"
    composer dumpauto
}

main "$@"
