#!/bin/sh

HELP_MESSAGE() {
	local EXIT_CODE="${1:-0}"
	cat <<EOF
Usage: $(basename -- "$0") [OPTIONS] [DIR]...
Check whether the current code repository is installed.

  -h		Show this help message.
  -p PKG_DIR	Read package install records from PKG_DIR. Defaults to
		  /var/log/packages (the Slackware default).

Copyright (C) 2011 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it. There is NO
WARRANTY, to the extent permitted by law.
EOF
	exit "$EXIT_CODE"
}

PACKAGES='/var/log/packages'

while getopts 'p:dDh' flag; do
	case "$flag" in
		'p')
			PACKAGES="$OPTARG"
			;;
		'h')
			HELP_MESSAGE 0
			;;
		*)
			HELP_MESSAGE 3
			;;
	esac
done

shift "$((OPTIND-1))"

package_installed() {
	local \
		pack_base="$1"

	
	find "$PACKAGES/" \
		-type f \
		-maxdepth 1 \
		-regextype 'posix-egrep' \
		-regex ".*/${pack_base}-[^-]*-[^-]*-[^-]*\$" \
		-printf '%f\n' |
	head \
		--lines=1
}

package_version_installed() {
	local \
		pack_base="$1"

	package_installed "$pack_base" |
	rev |
	cut \
		--delimiter='-' \
		--fields='3' |
	rev
}

report_installed() {
	local \
		docdir \
		extname="$1" \
		ext \
		ver_here \
		ver_installed \
		ver_message \
		dot \
		color \
		color_reset=$'\e[0m' \
		result=0

	ext="$(basename -- "$extname")"

	docdir="$(cd "$extname" && svn-docdir)"

	ver_here="$(
		basename -- "$docdir" |
		rev |
		cut -d - -f 1 |
		rev
	)"

	ver_installed="$(
		package_version_installed "$ext"
	)"

	ver_message="$ver_here"

	if [ -n "$ver_installed" ]; then
		if [ "$ver_installed" != "$ver_here" ]; then
			# can be upgraded
			color=$'\e[01;33m' # bright yellow
			dot='+'
			ver_message="$ver_installed => $ver_here"
			result=1
		else
			# installed and at current version
			color=$'\e[01;32m' # bright green
			dot='*'
			result=0
		fi
	else
		# not installed at all
		color=$'\e[01;31m' # bright red
		dot=' '
		result=2
	fi

	# if not terminal, ignore color
	if [ ! -t 2 ]; then
		color=''
		color_reset=''
	fi

	echo "${color}[${dot}] ${ext} ${ver_message}${color_reset}" >&2

	return "$result"
}

check_all() {
	local \
		srcdir \
		_r \
		result=0

	for srcdir; do
		report_installed "$srcdir"
		_r="$?"
		if [ "$_r" -gt "$result" ]; then
			result="$_r"
		fi
	done

	return "$result"
}

check_all "${@:-$PWD}"
