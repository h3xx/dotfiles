#!/bin/bash
# vi: et sts=4 sw=4 ts=4

USAGE() {
    printf 'Usage: %s [OPTIONS] [DIR]...\n' \
        "${0##*/}"
}

HELP_MESSAGE() {
    USAGE
    cat <<EOF
Check whether the current code repository is installed.

  -h            Show this help message.
  -p PKG_DIR    Read package install records from PKG_DIR. Defaults to
                  $PACKAGES (the Slackware default).

Copyright (C) 2011 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it. There is NO
WARRANTY, to the extent permitted by law.
EOF
}

PACKAGES='/var/log/packages'

while getopts 'p:dDh' FLAG; do
    case "$FLAG" in
        'p')
            PACKAGES=$OPTARG
            ;;
        'h')
            HELP_MESSAGE
            exit 0
            ;;
        *)
            printf 'Unrecognized flag: %s\n' \
                "$FLAG" \
                >&2
            USAGE >&2
            exit 1
            ;;
    esac
done

shift "$((OPTIND-1))"

package_installed() {
    local \
        PACK_BASE=$1


    find "$PACKAGES/" \
        -type f \
        -maxdepth 1 \
        -regextype 'posix-egrep' \
        -regex ".*/$PACK_BASE-[^-]*-[^-]*-[^-]*\$" \
        -printf '%f\n' |
    head \
        --lines=1
}

package_version_installed() {
    local \
        PACK_BASE=$1

    package_installed "$PACK_BASE" |
    rev |
    cut \
        --delimiter='-' \
        --fields='3' |
    rev
}

report_installed() {
    local \
        DOCDIR \
        EXTNAME=$1 \
        EXT \
        VER_HERE \
        VER_INSTALLED \
        VER_MESSAGE \
        DOT \
        COLOR \
        COLOR_RESET=$'\e[0m' \
        RESULT=0

    EXT=$(basename -- "$EXTNAME")

    DOCDIR=$(cd "$EXTNAME" && svn-docdir)

    VER_HERE=$(
        basename -- "$DOCDIR" |
        rev |
        cut -d - -f 1 |
        rev
    )

    VER_INSTALLED=$(
        package_version_installed "$EXT"
    )

    VER_MESSAGE=$VER_HERE

    if [[ -n $VER_INSTALLED ]]; then
        if [[ $VER_INSTALLED != "$VER_HERE" ]]; then
            # can be upgraded
            COLOR=$'\e[01;33m' # bright yellow
            DOT='+'
            VER_MESSAGE="$VER_INSTALLED => $VER_HERE"
            RESULT=1
        else
            # installed and at current version
            COLOR=$'\e[01;32m' # bright green
            DOT='*'
            RESULT=0
        fi
    else
        # not installed at all
        COLOR=$'\e[01;31m' # bright red
        DOT=' '
        RESULT=2
    fi

    # if not terminal, ignore color
    if [[ ! -t 2 ]]; then
        COLOR=
        COLOR_RESET=
    fi

    printf '%s[%s] %s %s %s\n' "$COLOR" "$DOT" "$EXT" "$VER_MESSAGE" "$COLOR_RESET" >&2

    return "$RESULT"
}

check_all() {
    local \
        SRCDIR \
        _R \
        RESULT=0

    for SRCDIR; do
        report_installed "$SRCDIR"
        _R=$?
        if [[ $_R -gt $RESULT ]]; then
            RESULT=$_R
        fi
    done

    return "$RESULT"
}

check_all "${@:-$PWD}"
