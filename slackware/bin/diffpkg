#!/bin/bash
# vi: et sts=4 sw=4 ts=4

# version 1.0.2

HELP_MESSAGE() {
    local EXIT_CODE=${1:-0}
    cat <<EOF
Usage: ${0##*/} [OPTIONS] -a|INSTALLED_PACKAGE_NAME
Compare a build jail with an installed Slackware package.

  -h            Show this help message.
  -a            Try to determine INSTALLED_PACKAGE_NAME automatically.
  -i            Ignore autogenerated files in both packages.
  -p            Output a plain diff (default is side-by-side).
  -B            Do not simulate built files (like /install/doinst.sh if links
                  exist).
  -C            Do not attempt to use colordiff (default is to use it if
                  available).
  -D            Do not simplify documentation directories when comparing.
                  Simplification is done so that the documentation directories
                  can be compared across package versions.
  -S            Do not attempt to fix Slackware cruft.
  -L SED_PROG   Apply sed(1) program SED_PROG to left output.
  -R SED_PROG   Apply sed(1) program SED_PROG to right output.

Copyright (C) 2010-2019 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it. There is NO
WARRANTY, to the extent permitted by law.
EOF
    exit "$EXIT_CODE"
}

PACKAGES='/var/log/packages'

USE_COLORDIFF=$(! hash colordiff &>/dev/null; echo "$?")
PLAIN_DIFF=0
FIX_DOCS=1
FIX_SLACKWARE_CRUFT=1
AUTOMATIC_PKG=0
SIMULATE_BUILT=1
IGNORE_BUILT=0
SED_LEFT=()
SED_RIGHT=()
while getopts 'haCpDSBiL:R:' flag; do
    case "$flag" in
        'a')
            AUTOMATIC_PKG=1
            ;;
        'C')
            USE_COLORDIFF=0
            ;;
        'p')
            PLAIN_DIFF=1
            ;;
        'D')
            FIX_DOCS=0
            ;;
        'S')
            FIX_SLACKWARE_CRUFT=0
            ;;
        'B')
            SIMULATE_BUILT=0
            ;;
        'i')
            IGNORE_BUILT=1
            ;;
        'L')
            SED_LEFT+=("$OPTARG")
            ;;
        'R')
            SED_RIGHT+=("$OPTARG")
            ;;
        'h')
            HELP_MESSAGE 0
            ;;
        *)
            HELP_MESSAGE 1
            ;;
    esac
done

shift "$((OPTIND-1))"

TEMP_FILES=()

cleanup() {
    rm -f -- "${TEMP_FILES[@]}"
}

trap 'cleanup' EXIT

TEMP_ONE=$(mktemp -t "${0##*/}.XXXXXX")
TEMP_TWO=$(mktemp -t "${0##*/}.XXXXXX")

TEMP_FILES+=("$TEMP_ONE" "$TEMP_TWO")

fix_listing() {
    local \
        LIST_NUM=$1

    (if [[ $IGNORE_BUILT -ne 0 ]]; then
        if [[ $LIST_NUM -eq 1 ]]; then
            # ignoring installed files only applies to second diff,
            # from installed packages
            ignore_autogenerated_files
        else
            cat
        fi
    elif [[ $SIMULATE_BUILT -ne 0 ]]; then
        if [[ $LIST_NUM -eq 0 ]]; then
            # simulating yet-to-be-generated files only applies to
            # first diff, the listing of files in the package being
            # built
            imagine_autogenerated_files
        else
            cat
        fi
    else
        cat
    fi) |
    (if [[ $FIX_DOCS -ne 0 ]]; then
        strip_docdir_version
    else
        cat
    fi) |
    (if [[ $FIX_SLACKWARE_CRUFT -ne 0 ]]; then
        remove_slackware_cruft
    else
        cat
    fi) |
    (if [[ $LIST_NUM -eq 0 ]]; then
        # operating on left
        apply_user_seds "${SED_LEFT[@]}"
    else
        # operating on right
        apply_user_seds "${SED_RIGHT[@]}"
    fi) |
    sort
}

ignore_autogenerated_files() {
    # remove `install/doinst.sh' from the file listing
    local AUTOGEN_FILES_PAT='^install/doinst\.sh$'

    egrep -v "$AUTOGEN_FILES_PAT"
}

imagine_autogenerated_files() {
    # add `install/doinst.sh' if there are symlinks in the build
    # directory
    # (remember, we're chdir-ed to the package directory)
    (if [[ ! -f install/doinst.sh && -n $(find . -type l |head -1) ]]; then

        echo 'install/doinst.sh'
    fi
    # cat, here, will not hit the above echo, but will assure continued
    # piping
    cat)

}

remove_slackware_cruft() {
    # (this should match everything in the Slackware header)
    # COMPRESSED PACKAGE_SIZE:
    # FILE LIST:
    # PACKAGE DESCRIPTION:
    # PACKAGE LOCATION:
    # PACKAGE NAME:
    # UNCOMPRESSED PACKAGE SIZE:
    # my_package:
    local SLACKPACK_HEADER_PAT='^[A-Za-z][^/]+:( |$)'

    egrep -v "$SLACKPACK_HEADER_PAT"
}

strip_docdir_version() {
    perl -p -e '
    if (m#^(usr/doc/)(.*?)(/.*)$#) {
        my @parts = reverse split /-/, $2;
        $_ = $1 . "[" .
            (join "-", reverse @parts[1 .. $#parts]) .
            "]" . $3 . "\n";
    }'
}

apply_user_seds() {
    if [[ $# -gt 0 ]]; then
        local \
            SED_PROG \
            SED_OPTS

        SED_OPTS=()

        for SED_PROG; do
            SED_OPTS+=('-e' "$SED_PROG")
        done

        sed "${SED_OPTS[@]}"
    else
        cat
    fi
}

run_diff() {

    local \
        DIFF \
        DIFF_OPTS \
        LABELS \
        LABELS_FMT \
        LABEL_LENGTH \
        LABEL_SIDE_LEN \
        WIDTH

    # figure out how wide the screen is
    WIDTH=${COLUMNS:-$(stty size |cut -f 2 -d ' ')}
    DIFF_OPTS=(
        '--suppress-common-lines'
        '--ignore-blank-lines'
        '--suppress-blank-empty'
        '--report-identical-files'
        "${WIDTH:+--width=$WIDTH}"
    )
    DIFF=diff

    if [[ $PLAIN_DIFF -eq 0 ]]; then
        # determine the diffing program
        if [[ $USE_COLORDIFF -ne 0 && -t 1 ]]; then
            DIFF=colordiff
        fi

        DIFF_OPTS+=('--side-by-side')

        # print out a header to indicate which side of the diff output means
        # what
        if [[ -n $WIDTH ]]; then
            LABELS=(
                '*** NEW PACKAGE ***'
                '*** INSTALLED PACKAGE ***'
            )

            LABELS_FMT=()

            LABEL_SIDE_LEN=$(((WIDTH+1)/2-3))
            for label in "${LABELS[@]}"; do
                LABEL_LENGTH=${#label}
                LABELS_FMT+=(
                    "$(printf "%-${LABEL_SIDE_LEN}s" \
                        "$(printf \
                            "%$(((LABEL_SIDE_LEN-LABEL_LENGTH)/2+LABEL_LENGTH))s" \
                            "$label")"
                    )"
                )
            done
            echo "${LABELS_FMT[*]}"
        else
            # unable to determine screen width
            echo '<< NEW | INSTALLED >>'
        fi
    else
        # using a plain diff
        DIFF_OPTS+=('--normal')
    fi

    $DIFF "${DIFF_OPTS[@]}" "$@"
}


INST_PKGNAME=
if [[ $AUTOMATIC_PKG -ne 0 ]]; then
    if grep -qP '^\w+:' 'install/slack-desc' 2>/dev/null; then
        INST_PKGNAME=$(
            grep -oP '^[\w-]+:' 'install/slack-desc' |
            grep -oP '[\w-]+' |
            head -1
        )
    elif [[ -d usr/doc ]]; then
        INST_PKGBASE=$(
            find usr/doc \
                \( \
                    -type d \
                    -mindepth 1 \
                    -maxdepth 1 \
                    ! -name '.*' \
                \) \
                -exec basename -- {} \; |
            head -1
        )
        # see /sbin/upgradepkg
        INST_PKGNAME=${INST_PKGBASE%-*}
    fi

    if [[ -z $INST_PKGNAME ]]; then
        echo 'Unable to automatically determine package base' >&2
        if [[ -n $1 ]]; then
            echo "Using \`$1' as package base" >&2
            INST_PKGNAME=$1
        else
            exit 1
        fi
    fi
else # if [[ $AUTOMATIC_PKG -eq 0 ]]
    INST_PKGNAME=$*
fi

find . \
    -type f \
    -print -o \
    \( -type d \( \
        \( -name '.' -exec echo {}/./ \; \) -o \
        -exec echo {}/ \; \
    \) \) |
        cut -c 3- |
        fix_listing '0' >"$TEMP_ONE" &&

if [[ $AUTOMATIC_PKG -ne 0 ]]; then
    find "$PACKAGES/" \
        -type f \
        -regextype posix-egrep \
        -regex ".*/${INST_PKGNAME//[^-]/.}-([^-]*)-([^-]*)-([^-]*)" \
        -name "$INST_PKGNAME*" |
    sort |
    head -1 |
    xargs cat
else
    find "$PACKAGES/" \
        -type f \
        -iname "$INST_PKGNAME*" |
    sort |
    head -1 |
    xargs cat
fi |
    fix_listing '1' >"$TEMP_TWO" &&

run_diff "$TEMP_ONE" "$TEMP_TWO"
