#!/bin/sh

HELP_MESSAGE() {
	local EXIT_CODE="${1:-0}"
	cat <<EOF
Usage: $(basename -- "$0") [OPTIONS] [FILE]... [DIR]...
Append doinst.sh information to install .info.gz files into /usr/info/dir.

  -h		Show this help message.
  -z		Automatically gzip(1) info files.
  -o DOINST	Append to doinst.sh file DOINST.

Copyright (C) 2010 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it. There is NO
WARRANTY, to the extent permitted by law.
EOF
	exit "$EXIT_CODE"
}
	

# should be used like so (from a build jail):
#
# $ rm usr/info/dir
# $ handy-info-install usr/info/*
#
# which will automatically create the `install' directory and append the
# information to `install/doinst.sh'

# --OR-- [since I'm always forgetting]
# $ rm usr/info/dir
# # cd install/
# $ handy-info-install ../usr/info/*
#
# will install the information into `./doinst.sh'

# note: will automatically remove usr/info/dir if passed as an argument

DEST_DOINST='install/doinst.sh'
USE_INFO_FILE_BASENAME=0
GZIP_INFOS=0
INFODIR='/usr/info'	# Slackware default

while getopts 'ho:z' flag; do
	case "$flag" in
		'o')
			DEST_DOINST="$OPTARG"
			USE_INFO_FILE_BASENAME=1
			;;
		'z')
			GZIP_INFOS=1
			;;
		'h')
			HELP_MESSAGE 0
			;;
		*)
			HELP_MESSAGE 1
			;;
	esac
done

shift "$((OPTIND-1))"

compress_info() {
	local \
		infofile="$1"

	if [ "${infofile%.gz}" == "$infofile" ]; then
		# not yet gzipped
		gzip -9 -- "$infofile" || return 1
		infofile+='.gz'
	fi
	echo "$infofile"
}

# append the header for the info file install process
doinst_header() {
	local \
		doinst="$1"

	if [ ! -d "$(dirname -- "$doinst")" ]; then
		mkdir -p -- "$(dirname -- "$doinst")" || return "$?"
	fi

	cat <<EOF >>"$doinst"
if [ -x usr/bin/install-info ]; then
EOF
}

doinst_entry() {
	local \
		doinst="$1" \
		infodir="$2" \
		infofile="$3"

	cat <<EOF >>"$doinst"
   chroot . /usr/bin/install-info --info-dir=$infodir $infofile >/dev/null 2>&1
EOF
}

# append the footer for the info file install process
doinst_footer() {
	local \
		doinst="$1" \

	cat <<EOF >>"$doinst"
fi

EOF
}

#if [ "$(basename "$PWD")" == 'install' ]; then
#	# I forgot and am running it from the install directory;
#	# use the `doinst.sh' in the current directory
#	DEST_DOINST='doinst.sh'
#	# correct for my clumsiness (use the basename of the .info file and
#	# assume it's in `usr/info')
#	USE_INFO_FILE_BASENAME=1
#else
#	# make sure we can output
#	mkdir -pv install || exit 1
#fi
doinst_header "$DEST_DOINST"
for infofile; do

	if [ "$GZIP_INFOS" -ne 0 ]; then
		infofile="$(compress_info "$infofile")"
	fi

	# remove the `dir' file if it is passed to us
	if [ "$(basename -- "$infofile" '.gz')" == 'dir' ]; then
		rm -fv -- "$infofile"
	else
		# else continue as normal
		if [ "$USE_INFO_FILE_BASENAME" -ne 0 ]; then
			infofile="usr/info/$(basename -- "$infofile")"
		fi
		if [ "$(basename -- "$(dirname -- "$infofile")")" != 'info' ]; then
			# info file is in a non-standard subdirectory
			infosubdir="$(basename -- "$(dirname -- "$infofile")")"
		else
			infosubdir=''
		fi

		# install!
		doinst_entry \
			"$DEST_DOINST" \
			"$INFODIR${infosubdir:+/$infosubdir}" \
			"$infofile"
	fi
done
doinst_footer "$DEST_DOINST"
