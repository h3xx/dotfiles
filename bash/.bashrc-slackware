# .bashrc-slackware

# Slackware Linux specific definitions

HISTIGNORE+=':startx:chkpkg *:checkver*'

## package-related

# building
alias \
	ch='./configure --help' \
	dbuild='dconf && make && midest' \
	ddbuild='ddconf && make && midest' \
	ddebuild='ddeconf && make && midest' \
	midest='make install DESTDIR="$PWD/b"'

#	dconf='./configure -C --disable-option-checking --prefix=/usr --sysconfdir=/etc --localstatedir=/var --datarootdir=/usr/share --localedir=/usr/share/locale --mandir=/usr/man --infodir=/usr/info --libdir=/usr/lib64' \
#	ddconf='dconf --docdir="/$(svn-docdir)"' \
#	ddeconf='ddconf --enable-shared --disable-static' \

#	ddeconf='CFLAGS='\''-fPIC -DPIC'\'' CPPFLAGS='\''-fPIC -DPIC'\'' CXXFLAGS='\''-fPIC -DPIC'\'' ddconf --with-pic --enable-shared --disable-static' \

# docdir chain
#alias \
#	svn-docdir='(basedir="$(readlink -m "$(find . .. -type d -iname .svn -maxdepth 1 -exec dirname -- {} \; |head -1)")" && [ -n "$basedir" ] && echo "usr/doc/$(basename "$basedir")-r$(svn info "$basedir" |grep ^Revision: |cut -f 2 -d '\'' '\'')"             || git-docdir)' \
#	git-docdir='(basedir="$(readlink -m "$(find . .. -type d -iname .git -maxdepth 1 -exec dirname -- {} \; |head -1)")" && [ -n "$basedir" ] && echo "usr/doc/$(basename -- "$basedir")-r$(git --git-dir="$basedir/.git" rev-list HEAD |wc -l)"                      || hg-docdir)' \
#	hg-docdir='(basedir="$(readlink -m "$(find . .. -type d -iname .hg -maxdepth 1 -exec dirname -- {} \; |head -1)")" && [ -n "$basedir" ] && echo "usr/doc/$(basename -- "$basedir")-r$(cd "$basedir" && hg tip |grep -oP '\''^changeset:\s*\d+'\'' |grep -oP '\''\d+'\'')"	|| cvs-docdir)' \
#	cvs-docdir='(basedir="$(readlink -m "$(find . .. -type d -name   CVS -maxdepth 1 -exec dirname -- {} \; |head -1)")" && [ -n "$basedir" ] && echo "usr/doc/$(basename -- "$basedir")-r$(cd "$basedir" && cvs rlog . 2>/dev/null |grep '\''^revision '\'' |wc -l)" || pkg-docdir)' \
#	pkg-docdir='(echo "usr/doc/$(basename "$PWD")")'

## XXX : Make sure not to ascend to the parent directory.
##	 This was causing problems say, when building from a tarball extracted
##	 in an RCS-controlled directory.
#alias \
#	svn-docdir='([[ -d .svn ]] && echo "usr/doc/$(basename -- "$PWD")-r$(svn info "$PWD" |grep ^Revision: |cut -f 2 -d '\'' '\'')" || git-docdir)' \
#	git-docdir='([[ -d .git ]] && echo "usr/doc/$(basename -- "$PWD")-r$(git --git-dir="$PWD/.git" rev-list HEAD |wc -l)" || hg-docdir)' \
#	hg-docdir='([[ -d .hg ]]   && echo "usr/doc/$(basename -- "$PWD")-r$(cd "$PWD" && hg tip |grep -oP '\''^changeset:\s*\d+'\'' |grep -oP '\''\d+'\'')" || cvs-docdir)' \
#	cvs-docdir='([[ -d CVS ]]  && echo "usr/doc/$(basename -- "$PWD")-r$(cd "$PWD" && cvs rlog . 2>/dev/null |grep '\''^revision '\'' |wc -l)" || pkg-docdir)' \
#	pkg-docdir='(echo "usr/doc/$(basename "$PWD")")'

# this is the old definition of dconf, before the new 64-bit library dir
#dconf='./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir=/usr/man --infodir=/usr/info' \

# querying

# Find amongst installed package names
# chkpkg PACKAGE
# Usefulness: *****
chkpkg() {
	local ERR
	cpk() {
		local REGEX="($(IFS='|'; echo "$*"))"
		find /var/log/packages/ \
			-maxdepth 1 \
			-regextype 'posix-egrep' \
			-printf '%f\n' |
		grep -Ei -- "$REGEX"
	}
	if [[ $# -gt 0 ]]; then
		cpk "$@"
		ERR=$?
	else
		# read in package patterns one line at a time
		# Usefulness: ?
		local LINE
		while read LINE; do
			# (sic) split on whitespace
			cpk $LINE
			ERR=$?
		done
	fi
	unset cpk
	return $ERR
}

catpkg() {
	local NAME PKG
	for NAME; do
		for PKG in $(chkpkg "$NAME") ; do
			if [[ -f /var/log/scripts/$PKG ]]; then
				cat "/var/log/scripts/$PKG"
			fi
			cat "/var/log/packages/$PKG"
		done
	done
}

watpkg() {
	catpkg "$@" |grep :
}

pkglook() {
	local \
		PKG_FILE \
		SLACK_META \
		INSTALL_LIST

	for PKG_FILE; do
		if [[ -f $PKG_FILE ]]; then
			if tar tf "$PKG_FILE" 'install' >/dev/null 2>&1; then
				mapfile -t INSTALL_LIST < <(
					tar tf "$PKG_FILE" 'install' |
					grep -v '/$'
				)
				for SLACK_META in "${INSTALL_LIST[@]}"; do
					echo "==== $SLACK_META ===="
					tar xOf "$PKG_FILE" "$SLACK_META"
				done
			fi

			tar tvvf "$PKG_FILE"
		fi
	done |less
}

# (wrote a script that does a much better job)
#pkgsearch() {
#	# explanation of weird syntax:
#	#
#	# IFS='|'	=> Concatenate array elements in double-quoted strings
#	#		   using `|'. IFS is normally set to $' \r\n', the
#	#		   first character of which is used to concatenate the
#	#		   elements of interpolated arrays.
#	#
#	# "${*/		=> Inline-concatenate all elements in the function's
#	#		   argument array (`$*'), applying a replacement to
#	#		   each element.
#	#
#	# #\//^}"	=> replace the string `/' anchored at the beginning of
#	#		   the string (because of `#') with `^'.
#	#
#	# So, an argument array like ('/usr' 'some_file.h' '/var') gets
#	# translated into `(^usr|some_file.h|^var)'
#	egrep -ir "($(IFS='|'; echo "${*/#\//^}"))" /var/log/packages/
#}
