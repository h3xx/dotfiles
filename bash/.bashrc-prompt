# .bashrc-prompt

## prompt

if [[ $TERM = 'dumb' ]]; then
PS1='\u@\h:\w\$ ' # factory default
else

# Only show this number of directories in path when expanding \W and \w
PROMPT_DIRTRIM=4

FRAME_COLOR='\e[1;30m'
BG_COLOR=
ERR_COLOR='\e[1;38;5;222;48;5;235m'
#GIT_COLOR='\e[1;38;5;208m'

# BASE_COLOR=(user root)
case "$HOSTNAME" in
	'necronomicon.slackware')
		# vaporwave prompt! color141 (bold:color207) / color39 (bold:color45)
		BASE_COLOR=('\e[0;38;5;141m' '\e[1;38;5;207m' '\e[0;38;5;39m' '\e[1;38;5;45m')
		;;
	'delicious.slackware')
		# green (32)/cyan (36)
		BASE_COLOR=('\e[0;32m' '\e[1;32m' '\e[0;36m' '\e[1;36m')
		;;

	# default
	*)
		# green (32)/yellow (33)
		BASE_COLOR=('\e[0;32m' '\e[1;32m' '\e[0;33m' '\e[1;33m')
		;;
esac

# select appropriate color for user type
[[ $UID -eq 0 ]] && BASE_COLOR=("${BASE_COLOR[@]:2}")

# hint-colors:
# 1 = set bold bit
# 0 = unset bold bit
# 5 = blink
# 4 = underline
# 38 = color foreground
# 48 = color background
# (38 or 48),5 = use extended 256-color palette
# 7 = reverse fg <=> bg
# hint-ansi:
# \e)0 sets G1 to special characters,
# \x0e (\016) puts terminal into G1 mode,
# \x0f (\017) puts terminal into normal mode

# original:prepend error string checking, as any prior command will overwrite $?
#original:PROMPT_COMMAND='(err=$?; [[ $err -eq 0 ]] || echo -e '\''\e[0;33m'\''"[$err]")'"${PROMPT_COMMAND:+ ; $PROMPT_COMMAND}"
#original: PS1='\['"$FRAME_COLOR"'\]=[\l \['"$BASE_COLOR"'\]\u\[\e[0;37m\]@\['"$BASE_COLOR"'\]\h\[\e[37m\] \w \['"$FRAME_COLOR"'\]]=\[\e[37m\] \$\[\e[0m\] '

GIT_PS1_SHOWCOLORHINTS=1
test -n "$(
	for fn in \
		/usr/doc/git-*.*.*/contrib/completion/git-prompt.sh \
		; do
		if [[ -f $fn ]]; then
			echo "$fn"
			break
		fi
	done
)" && {
	. "$_"
}

# ricing: add custom coloring
# @override
__git_ps1_colorize_gitstring ()
{
	if [[ -n ${ZSH_VERSION-} ]]; then
		local c_red='%F{red}'
		local c_green='%F{green}'
		local c_lblue='%F{blue}'
		local c_clear='%f'
	else
		# Using \[ and \] around colors is necessary to prevent
		# issues with command line editing/browsing/completion!
		local c_red='\[\e[1;38;5;222;48;5;235m\]'
		local c_green='\[\e[1;38;5;121;48;5;235m\]'
		local c_lblue='\[\e[1;38;5;81;48;5;233m\]'
		local c_clear='\[\e[0m\]'
	fi
	local bad_color=$c_red
	local ok_color=$c_green
	local flags_color="$c_lblue"

	local branch_color=""
	if [ $detached = no ]; then
		branch_color="$ok_color"
	else
		branch_color="$bad_color"
	fi
	c="$branch_color$c"

	z="$c_clear$z"
	if [ "$w" = "*" ]; then
		w="$bad_color$w"
	fi
	if [ -n "$i" ]; then
		i="$ok_color$i"
	fi
	if [ -n "$s" ]; then
		s="$flags_color$s"
	fi
	if [ -n "$u" ]; then
		u="$bad_color$u"
	fi
	r="$c_clear$r"
}

err='$(err=$?; [[ $err -eq 0 ]] || printf '\'' \[%s\][%d]'\'' '\'"$ERR_COLOR"\'' $err)'

# first line
line1_frame='\[\e)0'"$BG_COLOR$FRAME_COLOR"'\016\]lqqu\[\017\]\l '
line1_mid='\['"${BASE_COLOR[1]}"'\]\u\[\e[0m'"$BG_COLOR"'\]@\['"${BASE_COLOR[0]}"'\]\h'
line1_last='\['"$BG_COLOR$FRAME_COLOR"'\016\] tq\`\[\017\]'

line2_frame='\[\e[0m'"$BG_COLOR$FRAME_COLOR"'\016\]mq['
line2_mid=' \[\e[0m'"$BG_COLOR"'\017\]\w'
line2_last='\['"$FRAME_COLOR"'\] ]= \[\e[1;37m\]\$\[\e[0m\] '

# second line
# hint: __git_ps1 PRE POST GITPATTERN
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND ; }"\
'__git_ps1 '\
\'"$line1_frame$line1_mid"\'' '\
\'"$line1_last"\'\""$err"\"\''\n'"$line2_frame$line2_mid$line2_last"\'' '\
\'' %s'\'

# alternate setup:
#GIT_COLOR='\e[1;38;5;208m'
#gps1='$(__git_ps1 '\''\['"$GIT_COLOR"'\]¦%s'\'')'
#PROMPT_COMMAND"${PROMPT_COMMAND:+$PROMPT_COMMAND ; }"'(printf '\''\e)0'"$FRAME_COLOR"'\x0elqqu'"$(basename "$(tty)")"' \x0f'"$BASE_COLOR$USER"'\e[0;37m@'"$BASE_COLOR$(uname -n)"' '"$FRAME_COLOR"'\x0etq`%s\n'\'' "'"$err"'")'
#PS1='\['"$FRAME_COLOR"'\]'$'\x0e''mq['$'\x0f' '\[\e[0m\]\w'"$gps1"' \['"$FRAME_COLOR"'\]]= \[\e[1;37m\]\$\[\e[0m\] '
# still works:
#PS1="$line1_frame$line1_mid$line1_last$err\\n$line2_frame$line2_mid$gps1$line2_last"

# clean up
unset \
	BASE_COLOR \
	FRAME_COLOR \
	BG_COLOR \
	ERR_COLOR \
	line1_frame line1_mid line1_last \
	line2_frame line2_mid line2_last \
	err

# April Fools' Day prank
if [[ $(date +%m%d) = '0401' ]]; then
	PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND ; }"'(if [[ $RANDOM -le 8000 ]]; then printf "\0337\033[%d;%dH\033[4%dm \033[m\0338" $((RANDOM%LINES+1)) $((RANDOM%COLUMNS+1)) $((RANDOM%8)); fi)'
	# technicolor prompt variant
	#PROMPT_COMMAND+=' ; (if [[ $RANDOM -le 8000 ]]; then printf "\033[4%dm" $((RANDOM%8)); fi)'
fi
fi
