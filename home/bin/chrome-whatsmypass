#!/bin/bash
# vi: et sts=4 sw=4 ts=4

HELP_MESSAGE() {
    local EXIT_CODE=${1:-0}
    cat <<EOF
Usage: ${0##*/} [OPTIONS] [--] SEARCH...
Determine what my saved password is in Google Chrome.


  -h            Show this help message.
  -H HOME       Use HOME as your home directory.
  -l DATABASE   Use file DATABASE (usually called \`Login Data') as your login
                  database.
  -p PROFILE    Use PROFILE as your Chrome profile name (default \`Default').

Copyright (C) 2013-2015 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it. There is NO
WARRANTY, to the extent permitted by law.
EOF
    exit "$EXIT_CODE"
}

CONFIGDIR='.config/google-chrome'
PROFILE='Default'
_HOME=$HOME

while getopts 'hH:l:p:' flag; do
    case "$flag" in
        'h')
            HELP_MESSAGE 0
            ;;
        'H')
            _HOME=$OPTARG
            ;;
        'l')
            LOGINS=$OPTARG
            ;;
        'p')
            PROFILE=$OPTARG
            ;;
        *)
            HELP_MESSAGE 1
            ;;
    esac
done

shift "$((OPTIND-1))"

if [[ -z $LOGINS ]]; then
    LOGINS="$_HOME/$CONFIGDIR/$PROFILE/Login Data"
fi

if [[ ! -f $LOGINS ]]; then
    echo "Logins database \`$LOGINS' not found" >&2
    exit 2
fi

tbl='logins'
cols_search=(
    origin_url
    action_url
    username_value
    signon_realm
)
cols=(
    origin_url
    username_value
    password_value
)

# fuck you, I don't care if it's locked
if fuser -s - "$LOGINS"; then
    LOGINS_TEMP=$(mktemp -t "${0##*/}.XXXXXX")
    (umask 0077 ; cp -p -- "$LOGINS" "$LOGINS_TEMP") || exit
    LOGINS=$LOGINS_TEMP
else
    # plug minor security hole re: environment variables being used to
    # shred files
    LOGINS_TEMP=
fi

cleanup() {
    if [[ -n $LOGINS_TEMP ]]; then
        shred -f -n 1 -u -- "$LOGINS_TEMP" # secure delete first
        rm -f -- "$LOGINS_TEMP" # plain unlink if that fails
    fi
}

trap 'cleanup' EXIT

# SQLite uses Pascal quotes
quote() {
    echo "'${1//\'/''}'"
}

search() {
    local \
        srch=$1 \
        query \
        c \
        z=0

    srch=$(quote "%${srch}%")

    query="select $(IFS=',';echo "${cols[*]}") from $tbl where "
    for c in "${cols_search[@]}"; do
        query+="$c like $srch"
        let ++z
        if [[ $z -lt ${#cols_search[@]} ]]; then
            query+=' or '
        fi
    done
    sqlite3 "$LOGINS" "$query"
}

search "$1"
