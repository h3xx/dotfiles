#!/usr/bin/perl
# vi: et sts=4 sw=4 ts=4
use strict;
use warnings;

our $VERSION = '0.0.1';

require Net::BitTorrent::File;
use List::Util qw/ sum /;
use File::Basename qw/ basename /;

sub torrentinfo {
    my $file = shift;

    my $torrent = Net::BitTorrent::File->new($file);

    my $info = $torrent->info;

    my $is_multi_file = $info->{files};
    my $file_length;
    if ($is_multi_file) {
        # multi-file torrent
        $file_length = &sum(map { $_->{length} } @{$info->{files}});
    } else {
        # single-file torrent
        $file_length = $info->{length};
    }
    my $piece_number = $#{$torrent->pieces_array};
    my $piece_length = $info->{'piece length'};
    my $last_piece_length = $file_length % $piece_length;
    my $size_breakdown = sprintf '%d (%d * %d + %d)', $file_length, $piece_number, $piece_length, $last_piece_length;

    my @lines = (
        'metainfo file.......: ' . &basename($file),
        'info hash...........: ' . (unpack 'H*', $torrent->info_hash),
    );
    if ($is_multi_file) {
        push @lines,
            'directory name......: ' . $info->{name},
            'files...............:',
            (map {
                sprintf '   %s (%d)', (join '/', @{$_->{path}}), $_->{length}
            } @{$info->{files}}),
            'archive size........: ' . $size_breakdown
        ;
    } else {
        push @lines,
            'file name...........: ' . $info->{name},
            'file size...........: ' . $size_breakdown
            ;
    }
    push @lines,
        'tracker announce url: ' . $torrent->announce
        # 'comment.............:' # TODO
    ;

    return @lines;
}

printf "%s %s - decode BitTorrent metainfo files\n", &basename($0), $VERSION;
foreach my $fn (@ARGV) {
    print join "\n", &torrentinfo($fn);
    print "\n\n";
}
