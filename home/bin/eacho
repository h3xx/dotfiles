#!/bin/sh

# echo back each argument on a new line

HELP_MESSAGE() {
	local EXIT_CODE="${1:-0}"
	cat <<EOF
Usage: $(basename -- "$0") [OPTIONS] [--] [LINES]
Echo back each argument on a separate line.

  -h		Show this help message.
  -0		Use \\x00 (null) as a separator instead of newline.

Copyright (C) 2012 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it. There is NO
WARRANTY, to the extent permitted by law.
EOF
	exit "$EXIT_CODE"
}

SEP='\n'
while getopts '0h-' flag; do
	case "$flag" in
		'0')
			SEP='\0'
			;;
		'h')
			HELP_MESSAGE 0
			;;
		*)
			HELP_MESSAGE 1
			;;
	esac
done

shift "$((OPTIND-1))"

for arg; do
	# %b = expand backslashes
	# works when arg starts with `-'
	# not so well when it contains a null character, but that is acceptible
	printf '%s%b' "$arg" "$SEP"
done
