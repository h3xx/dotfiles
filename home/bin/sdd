#!/bin/bash
# vi: et sts=4 sw=4 ts=4

USAGE() {
    printf 'Usage: %s [OPTIONS] [--] [DIRECTORY]\n' \
        "${0##*/}"
}

_DEFAULT_DELETE_DATE='sunday'

HELP_MESSAGE() {
    USAGE
    cat <<EOF
Create a lazy self-deleting directory. I.e. one that uses at(1) to delete
itself at some point in the future.

If DIRECTORY is specified, create that directory, otherwise delete the current
directory.

  -h            Show this help message.
  -d DATE       Set the at(1)-compatible deletion time (default is '$_DEFAULT_DELETE_DATE').
  -i            Operate in interactive mode.
  -v            Operate in verbose mode.

Copyright (C) 2019 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
EOF
}

DELETE_DATE=$_DEFAULT_DELETE_DATE
INTERACTIVE=0
VERBOSE=0

while getopts 'hd:iv' FLAG; do
    case "$FLAG" in
        'h')
            HELP_MESSAGE
            exit 0
            ;;
        'd')
            DELETE_DATE=$OPTARG
            ;;
        'i')
            INTERACTIVE=1
            ;;
        'v')
            VERBOSE=1
            ;;
        *)
            printf 'Unrecognized flag: %s\n' \
                "$FLAG" \
                >&2
            USAGE >&2
            exit 1
            ;;
    esac
done

shift "$((OPTIND-1))"

ask_yn() (
    PROMPT=$1
    DEFAULT=$2
    read -r -p "$PROMPT [$([[ $DEFAULT = 'y' ]] && echo 'Y/n' || echo 'y/N')]? " ANSWER
    [[ $ANSWER =~ [01NYny] ]] || ANSWER=$DEFAULT
    # return
    [[ $ANSWER =~ [1Yy] ]]
)

schedule_delete() {
    local \
        DIR=$1 \
        DATE=$2
    # pass the directory in as an environment variable, since that's the safest
    echo 'rm -rf -- "$SDD_DIR"' | SDD_DIR=$(realpath -- "$DIR") at "$DATE"
}

DIR=${1:-.}

if [[ $VERBOSE -ne 0 ]]; then
    printf 'Using directory "%s"\n' \
        "$DIR" \
        >&2
fi

if [[ ! -d $DIR ]]; then
    if [[ $INTERACTIVE -ne 0 ]]; then
        if ! ask_yn "Create directory \`$DIR'?" y; then
            exit 1
        fi
    elif [[ $VERBOSE -ne 0 ]]; then
        printf 'Using directory "%s"\n' \
            "$DIR" \
            >&2
    fi
    mkdir -p -- "$DIR"
fi &&
if [[ $INTERACTIVE -ne 0 ]]; then
    if ! ask_yn "Schedule deletion for $DELETE_DATE?" y; then
        exit 1
    fi
fi &&
schedule_delete "$DIR" "$DELETE_DATE"
