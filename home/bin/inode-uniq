#!/usr/bin/perl
# vi: et sts=4 sw=4 ts=4
use strict;
use warnings;

=pod

=head1 NAME

inode-uniq - Pipe that accepts file list (e.g. from find(1)) that filters on
inode/dev distinctness.

=head1 SYNOPSIS

B<inode-uniq> [I<OPTIONS>]

=head1 OPTIONS

=over

=item B<-0>

Input items are terminated by a null character instead of by a newline (ala `xargs(1) -0').

=back

=head1 COPYRIGHT

Copyright (C) 2022 Dan Church.

License GPLv3: GNU GPL version 3.0 (L<https://www.gnu.org/licenses/gpl-3.0.html>)
with Commons Clause 1.0 (L<https://commonsclause.com/>).
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
You may NOT use this software for commercial purposes.

=cut

use Getopt::Std	qw/ getopts /;
use Pod::Usage qw/ pod2usage /;

sub HELP_MESSAGE {
    my $fh = shift;
    &pod2usage(
        -verbose => 1,
        -exitval => 0,
    );
}

&getopts('0', \ my %opts)
    || &pod2usage(
        -exitval => 2,
        -msg => "Try '$0 --help' for more information",
    );

if (defined $opts{0}) {
    $/ = "\0";
}

my %seen;
while (<>) {
    chomp (my $file = $_);
    # Ensure we can do a stat on this file
    if (-e $file) {

        # Note: lstat -> don't dereference symbolic links
        my ($device, $inode) = lstat $file;
        my $key = "$device.$inode";
        # Seen this file/directory before
        next if defined $seen{$key};

        $seen{$key} = $file;
    }
    print;
}
