#!/bin/bash
# vi: et sts=4 sw=4 ts=4

HELP_MESSAGE() {
    local EXIT_CODE=${1:-0}
    cat <<EOF
Usage: $(basename -- "$0") [OPTIONS] [LENGTH] [--]
Generate a random password.

  -h        Show this help message.
  -w        Generate a wordy password of size LENGTH words.
  --        Terminate options list.

Copyright (C) 2017 Dan Church.
License GPLv3+: GNU GPL version 3 or later (http://gnu.org/licenses/gpl.html).
This is free software: you are free to change and redistribute it. There is NO
WARRANTY, to the extent permitted by law.
EOF
    exit "$EXIT_CODE"
}

WORD=0

while getopts 'hw' flag; do
    case "$flag" in
        'h')
            HELP_MESSAGE 0
            ;;
        'w')
            WORD=1
            ;;
        *)
            HELP_MESSAGE 1
            ;;
    esac
done

shift "$((OPTIND-1))"

rand_words() {
    local length="$1"
    shuf -n "$length" /usr/share/dict/words |tr -d '\n'
    echo
}

rand_alnum() {
    local length="$1"
    # 6 bits input => 1 byte base64
    openssl rand -base64 "$length" |tr -d '\n=' |cut -c -"$length"
}

for PW_LENGTH; do
    if [[ $WORD -eq 0 ]]; then
        rand_alnum "$PW_LENGTH"
    else
        rand_words "$PW_LENGTH"
    fi
done
