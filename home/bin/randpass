#!/bin/bash
# vi: et sts=4 sw=4 ts=4

USAGE() {
    printf 'Usage: %s [OPTIONS] [LENGTH] [--]\n' \
        "${0##*/}"
}

HELP_MESSAGE() {
    USAGE
    cat <<EOF
Generate a random password.

  -h        Show this help message.
  -w        Generate a wordy password of size LENGTH words.
  -C        Do not copy to clipboard.
  --        Terminate options list.

Copyright (C) 2017-2022 Dan Church.
License GPLv3: GNU GPL version 3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
with Commons Clause 1.0 (https://commonsclause.com/).
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
You may NOT use this software for commercial purposes.
EOF
}

WORD=0
COPY_TO_CLIPBOARD=1

while getopts 'hwC' FLAG; do
    case "$FLAG" in
        'w')
            WORD=1
            ;;
        'C')
            COPY_TO_CLIPBOARD=0
            ;;
        'h')
            HELP_MESSAGE
            exit 0
            ;;
        *)
            printf 'Unrecognized flag: %s\n' \
                "$FLAG" \
                >&2
            USAGE >&2
            exit 1
            ;;
    esac
done

shift "$((OPTIND-1))"

rand_words() {
    local LENGTH=$1
    shuf -n "$LENGTH" /usr/share/dict/words |tr -d '\n'
    echo
}

rand_alnum() {
    local LENGTH=$1
    # 6 bits input => 1 byte base64
    openssl rand -base64 "$LENGTH" |tr -d '\n=' |cut -c -"$LENGTH"
}

CLIPPED=0
copy_to_clipboard() {
    local PASS=$1
    # if not being piped somewhere, and user wants it, and it's available
    if [[ -t 1 && $COPY_TO_CLIPBOARD -ne 0 && -n $DISPLAY ]] && hash xclip 2>/dev/null; then
        if [[ $CLIPPED -eq 0 ]]; then
            if printf '%s\n' "$PASS" |xclip -selection clipboard; then
                printf '(Copied to clipboard)\n' >&2
                CLIPPED=1
            else
                printf 'Warning: Unable to copy to clipboard!\n' >&2
            fi
        else
            printf '(Not copied to clipboard!)\n' >&2
        fi
    fi
}

for PW_LENGTH; do
    if [[ $WORD -eq 0 ]]; then
        PASS=$(rand_alnum "$PW_LENGTH")
    else
        PASS=$(rand_words "$PW_LENGTH")
    fi
    printf '%s\n' "$PASS"
    copy_to_clipboard "$PASS"
done
