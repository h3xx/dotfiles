#!/bin/bash
# vi: et sts=4 sw=4 ts=4

# colors a PNG image's alpha transparency with the specified color

USAGE() {
    printf 'Usage: %s [-c COLOR] -o [OUT] [FILE]\n' \
        "${0##*/}"
}

INFILE='/dev/stdin'
OUTFILE='/dev/stdout'
COLOR='white'
while getopts 'c:o:' FLAG; do
    case "$FLAG" in
        'c')
            COLOR=$OPTARG
            ;;
        'o')
            OUTFILE=$OPTARG
            ;;
        *)
            printf 'Unrecognized flag: %s\n' \
                "$FLAG" \
                >&2
            USAGE >&2
            exit 1
            ;;
    esac
done

shift "$((OPTIND-1))"

check_required_binaries() {
    local BIN MISSING=()
    for BIN; do
        if ! type -t "$BIN" &>/dev/null; then
            MISSING+=("$BIN")
        fi
    done
    if [[ ${#MISSING[@]} -gt 0 ]]; then
        printf 'Error: You are missing required programs:\n' >&2
        for BIN in "${MISSING[@]}"; do
            printf -- '- %s\n' "$BIN" >&2
        done
        exit 2
    fi
}

check_required_binaries \
    pngtopnm \
    pnmtopng

if [[ -n $1 ]]; then
    INFILE=$1
fi

pngtopnm -mix -background "$COLOR" "$INFILE" |pnmtopng >"$OUTFILE"
